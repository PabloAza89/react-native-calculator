10003400000000.12 + 0.11 // 1.00034e+13                     // LARGE INT  (OK) (14) 
1000000000000000000 + 23 // 1e+18                           // LARGE INT  (OK)
999999999999998 + 1 // 1e+15                                // LARGE INT  (OK)
9999999999999998 + 1 // 1e+16                               // LARGE INT  (OK)
12000000070000.12 + 0.11 // 1.2e+13                         // LARGE INT  (OK)
(104043257603400000000.12 + 0.11) x N1 // -1.0404326e+20    // LARGE INT  (OK)
12345123451234512345 x 2 // 2.4690247e+19                   // LARGE INT  (OK)
456456464785 x 3 // 1.3693694e+12                           // LARGE INT  (OK) 
N1.0404326e+20 x 2 // -2.0808652e+20                        // LARGE INT  (OK) 
232234232323276 * 3992231 // 9.271327e+20                   // LARGE INT  (OK) 
100034000000.12 + 0.11 // 100034000000.23                   // SMALL INT  (OK) (12)
100034000000 + 3 // 100034000003                            // SMALL INT  (OK) (12)
45645646478 x 3 // 136936939434                             // SMALL INT  (OK) (12)
N2 + 1 // -1                                                // SMALL INT  (OK)
10000000000.1 + 0.11 // 10000000000.2                       // SMALL INT  (OK)
(0.12 + 0.11) x N23.87 // -5.4901                           // SMALL INT  (OK) 
45645646478.000000000000000000002 * 3 // 136936939434       // SMALL INT  (OK) 
4.6 + 2.3 = 6.9                                             // VERY SMALL (OK)
3 x 2.3 // 6.9                                              // VERY SMALL (OK)
6.90 x 69.87 // 482.103                                     // VERY SMALL (OK)
2 x 3 / 2 x 7 / 89 // 0.23595505618                         // VERY SMALL (OK)

0.78978976545464564 / N3234423 // -2.44182584e-7                            // TEST (expo 8) (x.16 e-7) sn
0.12 / 1235467 // 9.71292637e-8                                             // TEST (expo 8) (x.15 e-8) sn
0.23422222978976545464564 / N1234412 // -1.89743967e-7                      // TEST (expo 8) (x.15 e-7)
0.234222222978976545464564 / N1234412 // -1.89743961e-7                     // TEST (expo 8) (x.16 e-7)
0.234222222978976545464564 / -123441222 // -1.89743928e-9                   // TEST (expo 8) (x.15 e-9)

456456464789742123123123333123123 x 3 // 1.3693694e+33                      // TEST (expo 7) (x.16 e+33) sn
N7.595158e+22 x 365 // -2.7722327e+25                                       // TEST (expo 7) (x.16 e+25)
N2.7722327e+25 x N65.12 // 1.8052779e+27   // ERR                           // TEST (expo 7) (x.16 e+27)
2 x N1123123123123123123123213 // -2.2462462e+24                            // TEST (expo 7) (x.16 e+24)
N2.0808652e+20 x 365324234 // -7.6019049e+28                                // TEST (expo 7) (x.15 e+28)
N2.0808652e+20 x 36532423432423423 // -7.6019049e+36                        // TEST (expo 7) (x.15 e+36)
N2.0808652e+20 x 3653242343242342312312312323423423423234 // -7.6019049e+59 // TEST (expo 7) (x.16 e+59)
0.78978976545464564213123234234234 / N32344232323233 // -2.4418257e-14      // TEST (expo 7) (x.16 e-14)
0.234222222978976545464564 / -1234412222 // -1.8974393e-10                  // TEST (expo 7) (x.16 e-10)
0.234222222978976545464564 / -12344122222 // -1.8974393e-11                 // TEST (expo 7) (x.16 e-11)
232234232323276 * 4992231 // 1.1593669e+21                                  // TEST (expo 7) (x.16 e+21)
1000234000002340000000 + 1 // 1.000234e+21                                  // TEST (expo 7) (x.14 e+21) // (final expo 6)
N2.0808652e+20 x 365 // -7.595158e+22      // ERR                           // TEST (expo 7) (x.8 e+22)  // (final expo 6)
N2.0808652e+20 * N2.0808652e+20 // 4.33e+40                                 // TEST (expo 7) (x.7 e+22)  // (final expo 2)
N2.0808652e+19 x 365 // -7.595158e+21                                       // TEST (expo 7) (x.8 e+21)  // (final expo 6)
100000000000000000000020 * -1 // -1e+23                                     // TEST (expo 7) (x.16 e+23) // (final expo 0)
1000000000000000000000 + 1  // 1e+21                                        // TEST (expo 7) (x e+21)    // (final expo 0)
10000000000000000000000 x 1 // 1e+22                                        // TEST (expo 7) (x e+22)    // (final expo 0)
10000000000000000000000 x N1 // -1e+22                                      // TEST (expo 7) (x e+22)    // (final expo 0)
222e+21 + 0 // 2.22e+23 //                                                  // TEST (expo 7) (x.2 e+23)  // (final expo 2)

17976931348623158079372897140530341507993413271003782693617377898044496829276475094664901797758720709633028641669288791094655554785194040263065748867150582068190890200070838367627385484581771153176447573027006985557136695962284291481986083493647529271907416844436551070434271155969950809304288017790417449779
+ 0 // 1.797693e+307                                                        // TEST (expo 6) (x.soMuch e+307)