import React, { Component}  from 'react';
import {requireNativeComponent} from 'react-native';

interface ASD {
  //children: any
}

export class MyCustomView extends Component<any> {
  constructor(props: any) {
    super(props);
    this._onChange = this._onChange.bind(this);
  }
  _onChange(event: any) {
    // if (!this.props.onChangeMessage) {
    //   return;
    // }
    //this.props.onChangeMessage(event.nativeEvent.message);
  }
  render() {
    return <MyViewManager {...this.props} /* onChange={this._onChange} */ />;
  }
}
// MyCustomView.propTypes = {
//   /**
//    * Callback that is called continuously when the user is dragging the map.
//    */
//   onChangeMessage: PropTypes.func,
//   ...
// };

// type ChildrenProp = {
//   children: React.ReactNode;
// };


const MyViewManager = requireNativeComponent('MyViewManager');
//export default MyCustomView;