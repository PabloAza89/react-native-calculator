package com.reactnativecalculator;

import com.facebook.react.uimanager.ThemedReactContext;
import com.facebook.react.uimanager.annotations.ReactProp;
import com.facebook.react.views.scroll.ReactScrollViewManager;
import com.facebook.react.views.scroll.ReactScrollView;
import com.facebook.react.uimanager.SimpleViewManager;
import com.facebook.react.uimanager.ViewGroupManager;
import com.reactnativecalculator.R;
import com.facebook.react.bridge.ReadableArray;
import android.util.Log;

//import com.facebook.react.common.SystemClock;
//import com.facebook.react.common.SystemClock.FpsListener;


//public class CustomScrollViewManager extends ReactScrollViewManager {
//public class CustomScrollViewManager extends SimpleViewManager<ReactScrollView> {
public class CustomScrollViewManager extends ViewGroupManager<ReactScrollView> {

    public static final String REACT_CLASS = "CustomScrollView";

    @Override
    public String getName() {
        return REACT_CLASS;
    }

    @Override
    public CustomScrollView createViewInstance(ThemedReactContext reactContext) {
        // Create an instance of your custom ScrollView
        //return new CustomScrollView(reactContext); //
        //return new CustomScrollView(reactContext, R.style.CustomScrollView); //
        //return new CustomScrollView(reactContext, null); //
        //return new CustomScrollView(reactContext); //
        //return new CustomScrollView(reactContext); //

        

        CustomScrollView view = new CustomScrollView(reactContext); //
        view.getContext().getTheme().applyStyle(R.style.CustomScrollView, true);
        return view;

        //Option 2: Create a new FpsListener instance.
        // FpsListener fpsListener = new FpsListener() {
        //     @Override
        //     public void onFpsChanged(double fps, double onUi) {
        //         // Do something with FPS changes if needed
        //     }
        // };
        // return new CustomScrollView(reactContext, fpsListener);

        

    }
    @ReactProp(name = "customStyleId")
    public void setCustomStyleId(ReactScrollView view, int styleResId) {
        // Here you get the style ID from JavaScript and apply it.
        if (styleResId > 0) {
            view.getContext().getTheme().applyStyle(styleResId, true);
        }
    }

    @ReactProp(name = "scrollbarPadding")
    public void setASD(ReactScrollView view, ReadableArray arr) {
  //fun setASD(view: ReactScrollView, index: Int, value: Float) {
    //if (index == 0) view.updatePadding(left = dpToPx(value))
    // else if (index == 1) view.updatePadding(top = dpToPx(value))
    //else if (index == 2) view.updatePadding(right = dpToPx(value))
    // else if (index == 3) view.updatePadding(bottom = dpToPx(24.0f))
    //view.getContext().getTheme().applyStyle(R.style.CustomScrollView, true);
    //view.getContext().getTheme().applyStyle(R.style.CustomScrollView, true);

    Log.d("LOG", "A VER 1 " + view.getContext().getTheme());


      // view.updatePadding(left = dpToPx(arr.getDouble(0)))
      // view.updatePadding(top = dpToPx(arr.getDouble(1)))
      // view.updatePadding(right = dpToPx(arr.getDouble(2)))
      // view.updatePadding(bottom = dpToPx(arr.getDouble(3)))


    //Log.d("LOG", "TEST 1 ${index} ${value}");

  

    // Log.d("LOG", "TEST all ${arr}");
    // Log.d("LOG", "TEST l ${arr.getDouble(0)}");
    // Log.d("LOG", "TEST t ${arr.getDouble(1)}");
    // Log.d("LOG", "TEST r ${arr.getDouble(2)}");
    // Log.d("LOG", "TEST b ${arr.getDouble(3)}");

    Log.d("LOG", "TEST all " + arr);
    Log.d("LOG", "TEST l " + arr.getDouble(0));
    Log.d("LOG", "TEST t " + arr.getDouble(1));
    Log.d("LOG", "TEST r " + arr.getDouble(2));
    Log.d("LOG", "TEST b " + arr.getDouble(3));

  }

}